version: "3.9"

services:
  project:
    build:
      args:
        user: ${USER}
        uid: ${UID}
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    container_name: nginx
    ports:
      - ${HOST_MACHINE_UNSECURE_HOST_PORT}:80
      - ${HOST_MACHINE_SECURE_HOST_PORT}:443
    volumes:
      - ${PROJECT_ROOT-./src}:${SERVER_PROJECT_ROOT}:delegated
      - ${LOG_DIR-./logs/nginx}:/var/log/nginx
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - digitalcave

  mysql:
    image: mysql:latest
    container_name: mysql
    command: ['mysqld', '--character-set-server=utf8', '--collation-server=utf8_general_ci']
    restart: unless-stopped
    tty: true
    ports:
      - ${HOST_MACHINE_MYSQL_PORT}:3306
    volumes:
      - mysqlData:/var/lib/mysql
      - ${MYSQL_LOG_DIR-./logs/mysql}:/var/log/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - digitalcave

  php:
    build:
      args:
        user: ${USER}
        uid: ${UID}
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: php
    volumes:
      - ${PROJECT_ROOT-./src}:${SERVER_PROJECT_ROOT}:delegated
    networks:
      - digitalcave

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - ${HOST_MACHINE_REDIS_PORT}:6379
    networks:
      - digitalcave

  composer:
    build:
      args:
        user: ${USER}
        uid: ${UID}
      context: .
      dockerfile: dockerfiles/composer.dockerfile
    container_name: composer
    volumes:
      - ${PROJECT_ROOT-./src}:${SERVER_PROJECT_ROOT}
    working_dir: ${SERVER_PROJECT_ROOT}
    depends_on:
      - php
    user: ${USER}
    entrypoint: [ 'composer' ]
    networks:
      - digitalcave

  npm:
    build:
      args:
        user: ${USER}
        uid: ${UID}
      context: .
      dockerfile: dockerfiles/npm.dockerfile
    container_name: npm
    volumes:
      - ${PROJECT_ROOT-./src}:${SERVER_PROJECT_ROOT}
    working_dir: ${SERVER_PROJECT_ROOT}
    entrypoint: [ 'npm' ]
    networks:
      - digitalcave

  artisan:
    build:
      args:
        user: ${USER}
        uid: ${UID}
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: artisan
    volumes:
      - ${PROJECT_ROOT-./src}:${SERVER_PROJECT_ROOT}:delegated
    depends_on:
      - mysql
    working_dir: ${SERVER_PROJECT_ROOT}
    user: ${USER}
    entrypoint: [ 'php', '${SERVER_PROJECT_ROOT}/artisan' ]
    networks:
      - digitalcave

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - digitalcave

volumes:
  mysqlData:

networks:
  digitalcave:
    driver: bridge